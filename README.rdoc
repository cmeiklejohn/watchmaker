= Watchmaker

Build complex objects easily for use in integration tests.

== Motivation

Extract complex setup code for integration tests out into a central
place; for example: 

* Share setup code between cucumber and test/unit by centralizing it.
* Run this code in the console in development mode to seed your db with test data.

== Using

=== Define profiles

==== Implicit profiles

Specify a dependency hash of profile name to objects.  The watchmaker
will either yield another watchmaker or a factory when resolving those
dependencies.

  Watchmaker.define :lots_of_things => [:car, :garage, :boat] 

==== Lambda-based profiles

When called, will call the lambda.

    Watchmaker.define :two_garages do
      2.times do 
        Factory.create :garage
      end
    end

==== Factory-based profiles

Create a garage using the garage factory.

    Watchmaker.define :garage, :factories => [:garage] do
      # Some other post-factory creation setup here.
    end

==== Watchmaker-based profiles

Create a garage using the garage factory.

    Watchmaker.define :garage, :factories => [:garage]

Create a car using the car factory, and a garage using the garage
watchmaker.

    Watchmaker.define :car, :factories => [:car], :watchmakers => [:garage]

==== Inject created objects into the lambda

Inject the factory-created garage and car into the block.

    Watchmaker.define :car_in_garage, :factories => [:garage, :car] do |garage, car| 
      garage.cars << car
    end

=== Manufacture objects

Build in-memory objects using the two garages profile.

    Watchmaker.build :two_garages

Build persisted objects using the two garages profile.

    Watchmaker.create :two_garages

==== Get your objects back

Watchmaker returns the objects created.

    Watchmaker.create(:garage).first.class # Garage

== Inspiration for the name

William Paley's {Watchmaker Analogy and Argument}[http://en.wikipedia.org/wiki/Watchmaker_analogy#The_Watchmaker_argument].

== License

Watchmaker is Copyright Â© 2011 Christopher Meiklejohn.  It is free software, and may be redistributed under the terms specified in the LICENSE file.

== About

The watchmaker gem was written by {Christopher Meiklejohn}[mailto:cmeiklejohn@swipely.com] from {Swipely, Inc.}[http://www.swipely.com].
